<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_fishing_rod</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_fishing_rod</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
state = "fishing";
bait = ""

pos = 0;

game_position[0] = o_lane_top.y-9;
game_position[1] = o_lane_middle.y-9;
game_position[2] = o_lane_bottom.y-9;

menu_position[0] = 112;
menu_position[1] = 134;

y = 112;

splashtimer = 7;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>choose(audio_play_sound(snd_splash1,1,0),
       audio_play_sound(snd_splash2,1,0),
       audio_play_sound(snd_splash3,1,0))
       
instance_create(global.gameWidth/2,(global.gameHeight/2-36),o_splashrod);

instance_create(x,(y+30),o_smallbulle);
instance_create(x,(y+30),o_smallbulle);

instance_create(x+2,36,o_1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
switch(state) {
    case "nothing" :
    break;
    case "fishing" :
        
        o_inuit.sprite_index = spr_inuit_idle;
        
        switch(o_game_controller.state) {
            case "play":
                pos_bulle = 40;
                pos_bulle2 = 20
            break;
            case "relax":
                pos_bulle = 40;
                pos_bulle2 = 20
            break;
            case "menu" :
                pos_bulle = 20
                pos_bulle2 = 10
            break;
        }
        
        ppos = pos
        if o_game_controller.state != "menu" {
            if keyboard_check_pressed(vk_up) {
                if pos = 0 { pos = 0; } else { pos -- 
                instance_create(x,y-pos_bulle2,o_smallbulle);
                instance_create(x,y-pos_bulle2,o_smallbulle);};
            } else if keyboard_check_pressed(vk_down) {
                if pos = 2 { pos = 2; } else  { pos ++
                instance_create(x,y+pos_bulle,o_smallbulle);
                instance_create(x,y+pos_bulle,o_smallbulle); }
            }
        } else {
            if keyboard_check_pressed(vk_up) {
                if pos = 0 { pos = 0; } else { pos -- 
                instance_create(x,y-pos_bulle2,o_smallbulle);
                instance_create(x,y-pos_bulle2,o_smallbulle);};
            } else if keyboard_check_pressed(vk_down) {
                if pos = 1 { pos = 1; } else  { pos ++
                instance_create(x,y+pos_bulle,o_smallbulle);
                instance_create(x,y+pos_bulle,o_smallbulle); }
            }
        }
        if ppos != pos {
            if o_game_controller.state = "menu" {
                tween = TweenFire(id, y__, EaseOutBack,TWEEN_MODE_ONCE,true,0,.2,y,menu_position[pos]); 
            } else { 
                tween = TweenFire(id, y__, EaseOutBack,TWEEN_MODE_ONCE,true,0,.2,y,game_position[pos]);
            }
            scr_woosh_sound();
        }
        switch (bait) {
            case "blue" :
                if instance_exists(o_fish_t) {
                    incoming_fish = instance_place(x,y,o_fish_t)
                    if incoming_fish {
                        if incoming_fish.sprite_index = spr_fish_blue and incoming_fish.state = "swimming"{
                            state = "reeling";
                            incoming_fish.state = "reeled";
                            alarm[0] = splashtimer;
                            scr_reel_sound();
                        }
                    }
                }
                
        if keyboard_check_pressed(ord("H")) {
            bait = "yellow";
            scr_spawnShine()
        }
        if keyboard_check_pressed(ord("G")) {
            bait = "green";
            scr_spawnShine()
        }
            break;
            case "yellow" :
                if instance_exists(o_fish_t) {
                    incoming_fish = instance_place(x,y,o_fish_t)
                    if incoming_fish {
                        if incoming_fish.sprite_index = spr_fish_yellow and incoming_fish.state = "swimming"{
                            state = "reeling";
                            incoming_fish.state = "reeled";
                            alarm[0] = splashtimer;
                            scr_reel_sound();
                        }
                    }
                }
        if keyboard_check_pressed(ord("F")) {
            bait = "blue";
            scr_spawnShine()
        }
        if keyboard_check_pressed(ord("G")) {
            bait = "green";
            scr_spawnShine()
        }
            break;
            case "green" :
                if instance_exists(o_fish_t) {
                    incoming_fish = instance_place(x,y,o_fish_t)
                    if incoming_fish {
                        if incoming_fish.sprite_index = spr_fish_green and incoming_fish.state = "swimming"{
                            state = "reeling";
                            incoming_fish.state = "reeled";
                            alarm[0] = splashtimer;
                            scr_reel_sound();
                        }
                    }
                }
        if keyboard_check_pressed(ord("F")) {
            bait = "blue";
            scr_spawnShine()
        }
        if keyboard_check_pressed(ord("H")) {
            bait = "yellow";
            scr_spawnShine()
        }
            break;
        }
        
        break;
    case "reeling" :
        o_inuit.sprite_index = spr_inuit_reeling;
        tween = TweenFire(id, y__, EaseOutBack,TWEEN_MODE_ONCE,true,0,.15,y,35);
        TweenAddCallback(tween,TWEEN_EV_FINISH,id,scr_set_state,"throwing" );
        break;
    case "throwing" :
        o_inuit.sprite_index = spr_inuit_idle;
        tween = TweenFire(id, y__, EaseOutBack,TWEEN_MODE_ONCE,true,0,.15,y,game_position[pos]);
        state = "fishing"

};



// Sprites
if o_game_controller.state != "menu" {
    switch (bait) {
        case "blue" :
            sprite_index = spr_fishing_rod_blue;
        break;
        case "yellow":
            sprite_index = spr_fishing_rod_yellow;
        break;
        case "green":
            sprite_index = spr_fishing_rod_green;
        break;
    }
}

if instance_place(x,y,o_play) and (keyboard_check_pressed(ord("F")) or keyboard_check_pressed(ord("G")) or keyboard_check_pressed(ord("H"))) and o_game_controller.state ="menu" {
    o_game_controller.state = "play"
    instance_create(x,y,o_fish_spawner)
    
    TweenFire(o_logo, x__, EaseInOutCubic,TWEEN_MODE_ONCE,true,0,.7,x,-10);
    TweenFire(o_mute_prompt, x__, EaseInOutCubic,TWEEN_MODE_ONCE,true,0,.7,x,0);
    TweenFire(o_credits, x__, EaseInOutCubic,TWEEN_MODE_ONCE,true,0,.7,x,320);
    TweenFire(o_play, x__, EaseInOutCubic,TWEEN_MODE_ONCE,true,0,.7,x,320);
    TweenFire(o_relax, x__, EaseInOutCubic,TWEEN_MODE_ONCE,true,0,.7,x,320);
    
    TweenFire(id, y__, EaseOutBack,TWEEN_MODE_ONCE,true,0,.3,y,game_position[0]);
    pos = 0
    instance_create(x,y-pos_bulle2,o_smallbulle);
    instance_create(x,y-pos_bulle2,o_smallbulle);
    bait = "blue"
    global.score = 0;
    
    if o_game_controller.tutorial = 1 {
        instance_create(room_width/2, room_height/2, o_f) 
        instance_create(room_width/2, room_height/2, o_g)
        instance_create(room_width/2, room_height/2, o_h)
        
        o_game_controller.tutorial = 0
    }
    
    with (o_fish_t) { instance_destroy() }
    
    draw_sprite(s_press_f,0,room_width/2,room_width/2)
}
if instance_place(x,y,o_relax) and (keyboard_check_pressed(ord("F")) or keyboard_check_pressed(ord("G")) or keyboard_check_pressed(ord("H"))) and o_game_controller.state ="menu" {
    o_game_controller.state = "relax"
    instance_create(x,y,o_fish_spawner)
    
    TweenFire(o_logo, x__, EaseInOutCubic,TWEEN_MODE_ONCE,true,0,.7,x,-10);
    TweenFire(o_mute_prompt, x__, EaseInOutCubic,TWEEN_MODE_ONCE,true,0,.7,x,0);
    TweenFire(o_credits, x__, EaseInOutCubic,TWEEN_MODE_ONCE,true,0,.7,x,320);
    TweenFire(o_play, x__, EaseInOutCubic,TWEEN_MODE_ONCE,true,0,.7,x,320);
    TweenFire(o_relax, x__, EaseInOutCubic,TWEEN_MODE_ONCE,true,0,.7,x,320)
    
    TweenFire(id, y__, EaseOutBack,TWEEN_MODE_ONCE,true,0,.3,y,game_position[0]);
    pos = 0
    instance_create(x,y-pos_bulle2,o_smallbulle);
    instance_create(x,y-pos_bulle2,o_smallbulle);
    bait = "blue"
    global.score = 0;
    
    if o_game_controller.tutorial = 1 {
        instance_create(room_width/2, room_height/2, o_f) 
        instance_create(room_width/2, room_height/2, o_g)
        instance_create(room_width/2, room_height/2, o_h)
        
        o_game_controller.tutorial = 0
    }
    
    instance_create(room_width/2,room_height/2,o_relax_prompt)
    
    with (o_fish_t) { instance_destroy() }
    
   
}

if instance_place(x,y,o_play) {
    draw_sprite(s_press_f,0,room_width/2,room_width/2)
    show_debug_message("1")
}

depth = o_nightsky + 1

if o_game_controller.state = "menu" { bait = "" ; sprite_index = spr_fishing_rod; }


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_self()
draw_set_colour(make_colour_rgb(209, 196, 195));
draw_line(x+1,y,o_inuit.x,o_inuit.y-1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
