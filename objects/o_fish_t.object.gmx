<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_fish_t</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = "swimming";
hspd = 0;
image_speed = 0;
missed =false;
livingtime = 0;

global.fishnumber ++;


if o_fish_spawner.phase_number &gt; 1 {
    sprite_index = choose(spr_fish_blue,spr_fish_yellow,spr_fish_green);
} else if o_fish_spawner.phase_number &gt; 0 {
    sprite_index = choose(spr_fish_blue,spr_fish_green);
} else {
    sprite_index = spr_fish_blue;
}

if o_game_controller.state = "relax" { sprite_index = choose(spr_fish_blue,spr_fish_yellow,spr_fish_green) }
    
y = choose(o_lane_top.y-4,
           o_lane_middle.y-4,
           o_lane_bottom.y-4);
           
x = choose(global.gameWidth+3,
           -3);
           
if sprite_index = spr_fish_blue { spd = 30; }
if sprite_index = spr_fish_green { spd = 20; }
if sprite_index = spr_fish_yellow { spd = 60; }
           
if x &gt; global.gameWidth/2{
    hspd = -spd;
} else {
    hspd = spd;
}

image_xscale = sign(hspd);

depth = o_ice.depth -2;


timingbulle = 230;
if sprite_index = spr_fish_blue { timingswim = 60; }
if sprite_index = spr_fish_green { timingswim = 42; }
if sprite_index = spr_fish_yellow { timingswim = 111.5; }
if sprite_index = spr_fish_blue { timingflap = 20; timingflap2 = 50;}
if sprite_index = spr_fish_green { timingflap = 5; timingflap2 = 20;}
if sprite_index = spr_fish_yellow { timingflap = 10; timingflap2 = 80;}
alarm[0] = random_range(timingbulle-10,timingbulle+100);

alarm[1] = timingswim;
alarm[2] = timingflap;

image_index = 0;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_swinanim()

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_swinanim()

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
tween = TweenFire(id, x__, EaseInOutQuad,TWEEN_MODE_ONCE,false,0,timingswim-1,x,x + hspd);
alarm[1] = timingswim;

alarm[2] = timingflap;
alarm[3] = timingflap2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if state = "swimming" { instance_create(x,y,o_bulle); }


alarm[0] = random_range(timingbulle-10,timingbulle+100);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
livingtime ++

switch (state) {
    case "idle" :
    break;
    case "swimming" :
        
    break;
    case "reeled" :
    
        if xprevious &lt; x { image_angle += 10 }
        if xprevious &gt; x { image_angle -= 10 }
        
        y = o_fishing_rod.y+1
        if y &lt;= 40 {
            instance_destroy();
            global.score += comboValue;
            fishRow ++;
        }
        
        
    break;
}

if (abs(xstart - x) &gt; room_width) {
    instance_destroy();
} 

if livingtime &gt; (room_speed*7) +40 and missed = false { 
    
    missed = true;
    instance_create(x,y,o_X)
    o_combo.fading = true
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
