<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize();
scr_init_view();
global.score = 0;
global.fishnumber = 0;
globalvar comboValue;
comboValue = 1;
globalvar fishRow;
fishRow = 0;

tutorial = 1

state = "menu"

audio_play_sound(snd_music,1,1);

// Set settings

view_wport[0] = global.gameWidth;
view_hport[0] = global.gameHeight;
view_wview[0] = global.gameWidth;
view_hview[0] = global.gameHeight;
display_set_gui_size(global.gameWidth,global.gameHeight);
room_speed = 60;

view_xview[0] = global.gameWidth/2;
view_yview[0] = global.gameHeight/2;

// create ALPHA

instance_create(global.gameWidth/2,global.gameHeight/2,o_alpha);
instance_create(global.gameWidth/2,global.gameHeight/2+1,o_bleu);

// Create menu

instance_create(global.gameWidth/2,global.gameHeight/2+10,o_logo);
instance_create(global.gameWidth/2,global.gameHeight/2,o_credits);
instance_create(global.gameWidth/2,global.gameHeight/2,o_mute_prompt);
instance_create(global.gameWidth/2,global.gameHeight/2,o_play);
instance_create(global.gameWidth/2,global.gameHeight/2,o_relax);
instance_create(global.gameWidth/2,global.gameHeight/2,o_press_f);
instance_create(global.gameWidth - 5, 10,o_combo);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if state != "menu" { o_fishing_rod.state = "nothing";

instance_create(room_width/2,room_height/2,o_youScored);
instance_create(room_width/2,room_height/2,o_restart);

tween = TweenFire(o_fishing_rod, y__, EaseOutBack,TWEEN_MODE_ONCE,true,0,.2,o_fishing_rod.y,o_inuit.y + 10); }

state = "score";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>o_game_controller</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (window_get_height() !=global.gameHeight*global.zoom
    &amp;&amp; window_get_width() != global.gameWidth*global.zoom
    &amp;&amp; !window_get_fullscreen())
{
    window_set_size(global.gameWidth*global.zoom,global.gameHeight*global.zoom);
    surface_resize(application_surface,global.gameWidth,global.gameHeight);
    display_reset(0,false);
}

/*if keyboard_check_pressed(ord('R')) {
    room_restart();
};
if keyboard_check_pressed(vk_escape) {
    game_end();
};*/


if instance_exists(o_fish_spawner) {
    
    if keyboard_check_pressed(ord('P')) {
        o_fish_spawner.freq += 5;
    };
    if o_fish_spawner.freq &gt; room_speed * .5 {
    if keyboard_check_pressed(ord('O')) {
        o_fish_spawner.freq -= 5;
    };
    };
};


if keyboard_check_pressed(vk_escape) and state != "menu" {
        with (o_fish_spawner) { instance_destroy() }
        state = "menu"

    TweenFire(o_logo, x__, EaseInOutCubic,TWEEN_MODE_ONCE,true,0,.7,o_logo.x,room_width/2);
    TweenFire(o_mute_prompt, x__, EaseInOutCubic,TWEEN_MODE_ONCE,true,0,.7,o_mute_prompt.x,room_width/2);
    TweenFire(o_credits, x__, EaseInOutCubic,TWEEN_MODE_ONCE,true,0,.7,o_credits.x,room_width/2);
    TweenFire(o_play, x__, EaseInOutCubic,TWEEN_MODE_ONCE,true,0,.7,o_play.x,room_width/2);
    TweenFire(o_relax, x__, EaseInOutCubic,TWEEN_MODE_ONCE,true,0,.7,o_relax.x,room_width/2);

    tween = TweenFire(o_fishing_rod, y__, EaseOutBack,TWEEN_MODE_ONCE,true,0,.2,o_fishing_rod.y,o_fishing_rod.menu_position[0])
    o_fishing_rod.pos = 0

    o_combo.fading = true
    
    o_fishing_rod.state = "fishing";
};

if keyboard_check_pressed(ord('M')) {
        if audio_is_playing(snd_music) { 
            if !audio_is_paused(snd_music) {
                audio_pause_sound(snd_music) 
            } else {
                audio_resume_sound(snd_music) 
            }
        }
};

if state = "score" and keyboard_check(vk_escape) {   
    state = "menu"

    TweenFire(o_logo, x__, EaseInOutCubic,TWEEN_MODE_ONCE,true,0,.7,o_logo.x,room_width/2);
    TweenFire(o_mute_prompt, x__, EaseInOutCubic,TWEEN_MODE_ONCE,true,0,.7,o_mute_prompt.x,room_width/2);
    TweenFire(o_credits, x__, EaseInOutCubic,TWEEN_MODE_ONCE,true,0,.7,o_credits.x,room_width/2);
    TweenFire(o_play, x__, EaseInOutCubic,TWEEN_MODE_ONCE,true,0,.7,o_play.x,room_width/2);
    TweenFire(o_relax, x__, EaseInOutCubic,TWEEN_MODE_ONCE,true,0,.7,o_relax.x,room_width/2);

    tween = TweenFire(o_fishing_rod, y__, EaseOutBack,TWEEN_MODE_ONCE,true,0,.2,o_fishing_rod.y,o_fishing_rod.menu_position[0])
    o_fishing_rod.pos = 0

    o_combo.fading = true
    
    o_fishing_rod.state = "fishing";
}

if state = "score" and keyboard_check(ord('F')) or state = "score" and keyboard_check(ord('G')) or state = "score" and keyboard_check(ord('G')) {   
    o_game_controller.state = "play"
    o_fishing_rod.state = "fishing"
    instance_create(x,y,o_fish_spawner)
    
    TweenFire(o_fishing_rod, y__, EaseOutBack,TWEEN_MODE_ONCE,true,0,.3,o_fishing_rod.y,o_fishing_rod.game_position[0]);
    pos = 0
    bait = "blue"
    global.score = 0;
}

if fishRow &gt; 0 { comboValue = 1 }
if fishRow &gt; 10 { comboValue = 5 }
if fishRow &gt; 20 { comboValue = 25 }
if fishRow &gt; 30 { comboValue = 125 }
if fishRow &gt; 50 { comboValue = 625 }
if fishRow &gt; 80 { comboValue = 3125 }
if fishRow &gt; 120 { comboValue = 15625 }
if fishRow = 149 { comboValue = 415939 }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if state != "menu" {
draw_set_font(font2);
draw_set_color(c_white);
draw_set_halign(fa_right);
draw_text(global.gameWidth-5,+1,string(global.score));
}

if instance_exists(o_fish_spawner) and state = "relax" { 
    draw_set_font(font0);
    draw_set_color(c_white);
    draw_set_halign(fa_left);
    draw_text(5,0,string(o_fish_spawner.freq / room_speed) + " s");
};

/*if instance_exists(o_fish_spawner) { 
    draw_set_font(font0);
    draw_set_color(c_white);
    draw_set_halign(fa_left);
    draw_text(5,0,string(o_fish_spawner.phase_freq[o_fish_spawner.phase_number] / room_speed) + " s between each fish");
};*/

/*draw_set_font(font0);
draw_set_color(c_white);
draw_set_halign(fa_left);
draw_text(5,10,string(global.fishnumber) + " fishes spawned");*/

/*draw_set_font(font0);
draw_set_color(c_white);
draw_set_halign(fa_left);
draw_text(5,20,string(fishRow) + " fishes in a row");*/

if state = "score" {
    draw_set_font(font4);
    draw_set_color(c_white);
    draw_set_halign(fa_center);
    draw_text(room_width/2,room_height/2-5,string(global.score));
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
